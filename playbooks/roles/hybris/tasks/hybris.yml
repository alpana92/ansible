---
- name: Download Hybris Package
  get_url: url=http://{{ repo_server }}/hybris-packages/{{ hybris_package }} dest=/tmp
  tags:
      - hybris_download
      - hybris

- name: Make Hybris directory
  file: path={{ hybris_dir }} state=directory owner=hybris group=hybris mode=0775 recurse=yes
  tags:
      - hybris_make_dir
      - hybris

- name: Make hybris symlink
  file: src={{ hybris_dir }} dest={{ hybris_symlink }} state=link owner=hybris group=hybris mode=0775
  tags:
      - hybris_make_link
      - hybris

- name: Extract hybris in Hybris directoy
  unarchive: src=/tmp/{{ hybris_package }} dest={{ hybris_dir }} copy=no owner=hybris group=hybris mode=0775
  tags:
      - hybris_extract
      - hybris

- name: set hybris home
  lineinfile: dest={{ item.0 }} state=present regexp={{ item.1.regexp }} line={{ item.1.line }} create=yes
  with_nested:
      - [ '/etc/environment', '/etc/profile', '/etc/profile.d/hybris.sh' ]
      - [ { regexp: '^HYBRIS_HOME=', line: 'HYBRIS_HOME={{ hybris_home }}' } , { regexp: '^ANT_HOME=', line: 'ANT_HOME={{ hybris_ant }}' } ,
          { regexp: '^JAVA_HOME=', line: 'ANT_HOME={{ java_home }}' } , { regexp: '^PATH=', line: 'PATH={{ ansible_env.PATH }}:{{ hybris_ant }}/bin:{{ java_home }}' } ]
  tags:
      - hybris_set_home
      - hybris

- name: source the environment
  shell: "{{ item }}"
  with_items:
            - . /etc/environment
            - export HYBRIS_HOME={{ hybris_home }}
            - export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
            - export ANT_HOME={{ hybris_ant }}
            - export PATH=$PATH:{{ hybris_ant }}/bin:{{ java_home }}
  tags:
      - hybris_set_home
      - hybris

- name: Install hybris recipe
  shell: "{{ item }}"
  environment:
              HYBRIS_HOME: '{{ hybris_home }}'
              JAVA_HOME: '{{ java_home }}'
              ANT_HOME: '{{ hybris_ant }}'
              PATH: '{{ ansible_env.PATH }}:{{ hybris_ant }}/bin:{{ java_home }}'
  become_user: hybris
  with_items:
            - '{{ hybris_symlink }}/installer/install.sh -r {{ hybris_recipe }}'
  tags:
      - hybris_install_recipe
      - hybris

- include: hybris_dir_ownership.yml

- name: Copy templates
  template: src={{ item.filename }} dest={{ item.filepath }} owner={{ item.owner }} group={{ item.group }} mode=0775
  with_items:
            - { filename: 'hybris.service', filepath: '/lib/systemd/system/hybris.service', owner: 'root', group: 'root' }
            - { filename: 'server.xml', filepath: '{{ hybris_home }}/config/tomcat/conf/server.xml', owner: 'hybris', group: 'hybris' }
            - { filename: 'local_properties.j2', filepath: '{{ hybris_home }}/config/local.properties', owner: 'hybris', group: 'hybris' }
            - { filename: 'standaloneSolrServerConfig.j2', filepath: '/tmp/standaloneSolrServerConfig.impex', owner: 'root', group: 'root' }
  tags:
      - hybris_configs
      - hybris

- name: Reload hybris service configs
  shell: '{{ item }}'
  with_items:
            - systemctl daemon-reload
            - systemctl enable /lib/systemd/system/hybris.service
  tags:
      - hybris_configs
      - hybris

- name: Add db and srch hosts in host file
  lineinfile: "dest=/etc/hosts state=present regexp='^{{ item.ip }} ' line='{{ item.ip }} {{ item.name }}'"
  with_items:
            - '{{ servers_list }}'
  when: item.type == 'db' or item.type == 'srch'
  tags:
      - hybris_add_hosts
      - hybris

- name: Download db driver
  get_url: url=http://{{ repo_server }}/database-drivers/{{ db_driver }} dest={{ hybris_home }}/bin/platform/lib/dbdriver/
  tags:
      - hybris_db_driver
      - hybris

- include: hybris_dir_ownership.yml

- name: Build hybris app
  shell: "{{ item }} chdir={{ hybris_platform }}"
  become_user: hybris
  environment:
              HYBRIS_HOME: '{{ hybris_home }}'
              JAVA_HOME: '{{ java_home }}'
              ANT_HOME: '{{ hybris_ant }}'
              PATH: '{{ ansible_env.PATH }}:{{ hybris_ant }}/bin:{{ java_home }}'
  with_items:
            - '. {{ hybris_platform }}/setantenv.sh'
            - ant clean all
  notify:
        - Start Hybris
  tags:
      - hybris_build
      - hybris

- include: hybris_dir_ownership.yml

- name: DB Initialization
  shell: "{{ item }} chdir={{ hybris_platform }}"
  become_user: hybris
  environment:
              HYBRIS_HOME: '{{ hybris_home }}'
              JAVA_HOME: '{{ java_home }}'
              ANT_HOME: '{{ hybris_ant }}'
              PATH: '{{ ansible_env.PATH }}:{{ hybris_ant }}/bin:{{ java_home }}'
  with_items:
            - '. {{ hybris_platform }}/setantenv.sh'
            - 'ant initialize -Dtenant=master > {{ hybris_home }}/log/initialization-$(date +%Y-%m-%dT%H-%M-%S).log 2>&1'
  when: ansible_hostname == servers_list[0].name
  tags:
      - hybris_initialize
      - hybris

- include: hybris_dir_ownership.yml

- name: Integrate Solr with Hybris
  shell: "{{ item }} chdir={{ hybris_platform }}"
  become_user: hybris
  environment:
              HYBRIS_HOME: '{{ hybris_home }}'
              JAVA_HOME: '{{ java_home }}'
              ANT_HOME: '{{ hybris_ant }}'
              PATH: '{{ ansible_env.PATH }}:{{ hybris_ant }}/bin:{{ java_home }}'
  with_items:
            - '. {{ hybris_platform }}/setantenv.sh'
            - 'ant importImpex -Dresource=/tmp/standaloneSolrServerConfig.impex > {{ hybris_home }}/log/solr_integration.log 2>&1'
  when: ansible_hostname == servers_list[0].name
  tags:
      - hybris_integtrate_solr
      - hybris

- include: hybris_dir_ownership.yml
